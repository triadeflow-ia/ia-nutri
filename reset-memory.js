// Script para resetar mem√≥ria de um usu√°rio espec√≠fico
import { redisClient } from './config/redis.js';
import { openai } from './config/openai.js';

const phoneNumber = '19983805908';

async function resetMemory() {
  try {
    console.log(`üîÑ Resetando mem√≥ria para o n√∫mero: ${phoneNumber}`);
    
    // 1. Obter thread ID atual
    const threadId = await redisClient.get(`threadId:${phoneNumber}`);
    console.log(`Thread ID atual: ${threadId}`);
    
    // 2. Deletar thread ID do Redis
    await redisClient.del(`threadId:${phoneNumber}`);
    console.log('‚úÖ Thread ID removido do Redis');
    
    // 3. Deletar thread da OpenAI se existir
    if (threadId) {
      try {
        await openai.beta.threads.del(threadId);
        console.log(`‚úÖ Thread ${threadId} deletado da OpenAI`);
      } catch (error) {
        console.error('Erro ao deletar thread da OpenAI:', error.message);
      }
    }
    
    // 4. Limpar todas as conversa√ß√µes do n√∫mero
    const conversationKeys = await redisClient.keys(`conversation:${phoneNumber}:*`);
    console.log(`Encontradas ${conversationKeys.length} conversa√ß√µes para limpar`);
    for (const key of conversationKeys) {
      await redisClient.del(key);
      console.log(`‚úÖ Limpou: ${key}`);
    }
    
    // 5. Limpar mensagens individuais do n√∫mero
    const messageKeys = await redisClient.keys(`message:*`);
    let deletedMessages = 0;
    for (const key of messageKeys) {
      const messageData = await redisClient.hGetAll(key);
      if (messageData.phoneNumber === phoneNumber) {
        await redisClient.del(key);
        deletedMessages++;
      }
    }
    console.log(`‚úÖ Limpou ${deletedMessages} mensagens individuais`);
    
    // 6. Limpar estados tempor√°rios do n√∫mero
    const tempKeys = await redisClient.keys(`temp:${phoneNumber}*`);
    for (const key of tempKeys) {
      await redisClient.del(key);
      console.log(`‚úÖ Limpou estado tempor√°rio: ${key}`);
    }
    
    console.log(`üéâ Mem√≥ria resetada com sucesso para ${phoneNumber}!`);
    console.log('Agora voc√™ pode come√ßar uma conversa completamente nova.');
    
  } catch (error) {
    console.error(`‚ùå Erro ao resetar mem√≥ria:`, error);
  } finally {
    // Fechar conex√£o Redis
    await redisClient.quit();
    process.exit(0);
  }
}

resetMemory();
